engine {

  applyTo("README.md") {
    TextPreprocessor()
  }

  // Add deployment artifacts
  if (#deploymentType == 'tanzu') {
    let uuid = T(java.util.UUID).randomUUID() in {
      applyTo("deploy/tanzu/tanzu.yml") {
        ReplaceSnippet(text: "python-flask", with: #artifactId.toLowerCase())
        OpenRewriteRecipe('org.openrewrite.yaml.ChangeValue', { oldKeyPath: "$.configuration.id", value: 'config-' + #uuid.toString() })
        RewritePath(rewriteTo: #filename)
      }
    }
    applyTo("deploy/tanzu/.tanzu/config/python-flask.yml") {
      ReplaceSnippet(text: "python-flask", with: #artifactId.toLowerCase())
      RewritePath(rewriteTo: '.tanzu/config/' + #artifactId.toLowerCase() + '.yml')
    }
    applyTo("deploy/tanzu/.tanzu/config/httproute-python-flask.yml") {
      ReplaceSnippet(text: "python-flask", with: #artifactId.toLowerCase())
      RewritePath(rewriteTo: '.tanzu/config/httproute-' + #artifactId.toLowerCase() + '.yml')
    }
  }
  select(!"deploy/**")

  // Update the artifact name as needed
  applyTo("README.md") {
    ReplaceSnippet(text: "python-flask", with: #artifactId.toLowerCase())
  }

  // Create the provenance file
  Provenance()

}